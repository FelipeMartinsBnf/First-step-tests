# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.support import expected_conditions as EC

from Tests.configs import Logar

class TestTestesalvarvaga():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_salvarvaga(self):

    driver = Logar(self.driver)
    driver.find_element(By.CSS_SELECTOR, ".btn-header:nth-child(3) > .btn").click()

    WebDriverWait(driver, 10).until(
      EC.url_contains("dash")
    )

    driver.set_window_size(3840, 2160)

    WebDriverWait(self.driver, 10).until(
      EC.element_to_be_clickable((By.CSS_SELECTOR, ".card-link:nth-child(2) .btn"))
    ).click()
    WebDriverWait(self.driver, 10).until(
      EC.element_to_be_clickable((By.CSS_SELECTOR, ".vaga-item:nth-child(1) > .vaga-item .title-font-sec"))
    ).click()


    salvarBtn = driver.find_element(By.CSS_SELECTOR, ".vaga-btns > .btn")
    self.driver.execute_script("arguments[0].scrollIntoView({ behavior: 'smooth', block: 'center' });", salvarBtn)

    salvarBtn.click()

    modal = driver.find_element(By.CSS_SELECTOR, ".modal-content")
    driver.execute_script("arguments[0].scrollTop = arguments[1];", modal, 200)

    self.driver.find_element(By.CSS_SELECTOR, ".back-btn > .text").click()

    # substitua 'token' pelo nome da chave que vocÃª quer verificar
    valor = driver.execute_script("return localStorage.getItem('vagasSalvas');")

    # faz o assert comparando com o valor esperado
    assert valor == "[1]"

    self.driver.close()
  
